# -*- coding: utf-8 -*-
"""M22MA002_Q4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/137RoSJy1eCF8LfZwPaZRYeDq9xRhmo_e
"""

import numpy as np
import cv2 as cv
from google.colab.patches import cv2_imshow
import math

img1 =cv.imread("/content/clock_2.jpg")
img2 =cv.imread("/content/clock_1.png")
cv2_imshow(img1)
cv2_imshow(img2)

gray1 = cv.cvtColor(img1, cv.COLOR_BGR2GRAY)
gray2 = cv.cvtColor(img2, cv.COLOR_BGR2GRAY)
edges1 = cv.Canny(gray1,50,200,None,3)
edges2 = cv.Canny(gray2,100,200,None,3)
#  Standard Hough Line Transform
lines1 = cv.HoughLines(edges1, 1, np.pi / 180, 150, None, 0, 0)
lines2 = cv.HoughLines(edges2, 1, np.pi / 180, 50, None, 0, 0)

print(lines1)
print(len(lines1))
lines1[1][0][1]

print(lines2)
print(len(lines2))

cdst1 = cv.cvtColor(edges1, cv.COLOR_GRAY2BGR)
cdst2 = cv.cvtColor(edges2, cv.COLOR_GRAY2BGR)
cdstP1 = np.copy(cdst1)
cdstP2 = np.copy(cdst2)

dist=[]
slope=[]
if lines1 is not None:
    for i in range(0, len(lines1)):
        rho = lines1[i][0][0]
        theta = lines1[i][0][1]
        a = math.cos(theta)
        b = math.sin(theta)
        x0 = a * rho
        y0 = b * rho
        x1,y1 = (int(x0 + 1000*(-b)), int(y0 + 1000*(a)))
        x2,y2 = (int(x0 - 1000*(-b)), int(y0 - 1000*(a)))
        d=(((x1-x2)**2 + (y1-y2)**2)**0.5)
        dist.append(d)
        if((x2-x1)and (x1-x2))==0:
         m=1.57
        else:
         m=abs(y2-y1)//abs(x2-x1)
        slope.append(m)
        print(x1,x2,y1,y2)
        cv.line(cdst1, (x1,y1), (x2,y2), (0,0,255), 3, cv.LINE_AA)
        # print(pt1,pt2)
        cv2_imshow(cdst1)

"""from the above figure it has been seen that we have to take the lines of the minute  hand i.e. 1st figure and the hour hand i.e. 2nd figure .Hence we will use the polar value of the 1st two lines of the list LINES .In it we will use angle which is given in radian .we will find the difference of the angle part and convert it in degree """

rad1=lines1[0][0][1]
rad2=lines1[1][0][1]
angle=abs(rad1-rad2)
angle_deg=(180.0*angle)/3.14159265
angle_deg
print(f"Angle between minute and hour hand for clock 2 time 10:10 o clock:{180-angle_deg}")

# from math import atan
# val = abs((m2 - m1) / (1 + (m1 * m2)))
# angle = atan(val)
# angle_deg=(180.0*angle)/3.14159265

# print(f"Angle between minute and hour hand:{angle_deg}")
cdst1 = cv.cvtColor(edges1, cv.COLOR_GRAY2BGR)
cdst2 = cv.cvtColor(edges2, cv.COLOR_GRAY2BGR)
cdstP1 = np.copy(cdst1)
cdstP2 = np.copy(cdst2)

if lines2 is not None:
    for i in range(0, len(lines2)):
        rho = lines2[i][0][0]
        theta = lines2[i][0][1]
        a = math.cos(theta)
        b = math.sin(theta)
        x0 = a * rho
        y0 = b * rho
        x1,y1 = (int(x0 + 1000*(-b)), int(y0 + 1000*(a)))
        x2,y2 = (int(x0 - 1000*(-b)), int(y0 - 1000*(a)))
        d=(((x1-x2)**2 + (y1-y2)**2)**0.5)
        dist.append(d)
        if((x2-x1)and (x1-x2))==0:
         m=1.57
        else:
         m=abs(y2-y1)//abs(x2-x1)
        slope.append(m)
        print(x1,x2,y1,y2)
        cv.line(cdst2, (x1,y1), (x2,y2), (0,0,255), 3, cv.LINE_AA)
        # print(pt1,pt2)
        cv2_imshow(cdst2)

rad1=lines2[1][0][1]
rad2=lines2[8][0][1]
angle=abs(rad1-rad2)
angle_deg=(180.0*angle)/3.14159265
angle_deg
print(f"Angle between minute and hour hand for clock 1 at time 8:00 o clock .:{180-angle_deg}")

