# -*- coding: utf-8 -*-
"""M22MA002_Q5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vu4Ux2GDYArrow1pt_usG8IdcKtdpokn
"""

from google.colab.patches import cv2_imshow as cv_show
import cv2
import numpy as np
import random

land1 = cv2.imread('/content/Amsterdam.jpg',1)
land2 = cv2.imread('/content/Akshardham.jpg',1)
land3 = cv2.imread('/content/Auli.jpg',1)
land1 = cv2.resize(land1, (256,256))
land2 = cv2.resize(land2, (256,256))
land3 = cv2.resize(land3, (256,256))
cv_show(land1)
cv_show(land2)
cv_show(land3)
land1 = cv2.cvtColor(land1, cv2.COLOR_BGR2GRAY)
land2 = cv2.cvtColor(land2, cv2.COLOR_BGR2GRAY)
land3 = cv2.cvtColor(land3, cv2.COLOR_BGR2GRAY)
cv_show(land1)
cv_show(land2)
cv_show(land3)

temp = (land1+land2+land3)
average = temp/3
cv_show(average)

difff = cv2.subtract(land1, land2)
cv_show(difff)

filter = np.array([[-1, -1, -1],
                       [0, 0, 0],
                       [1, 1, 1]])
output = cv2.filter2D(src=land1, ddepth=-1, kernel=filter)
cv_show(land1)
cv_show(output)

def add_noise(input):
    r , c = input.shape
    number_of_pixels = round((0.05*r*c))
    for i in range(number_of_pixels):
        y=random.randint(0, r - 1)
        x=random.randint(0, c - 1)
        input[y][x] = 255
    return input
salt_img=add_noise(land2)

cv_show(add_noise(land2))
cv2.imwrite("noisy image.jpg",salt_img)

import matplotlib.pyplot as plt

converted_img = cv2.cvtColor(salt_img, cv2.COLOR_GRAY2BGR)
dst = cv2.fastNlMeansDenoisingColored(converted_img, None, 20, 40,10, 10)
plt.subplot(121), plt.imshow(converted_img)
print("")
plt.subplot(122), plt.imshow(dst)
plt.show()